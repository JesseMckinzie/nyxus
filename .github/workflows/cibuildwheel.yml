name: Build CI wheels

on:
  release:
    types: [published]

  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
      MACOSX_DEPLOYMENT_TARGET: "10.15"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15]
        cibw_archs: ["auto"]
        include:
          - os: ubuntu-latest
            cibw_archs: "aarch64"

    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - uses: actions/checkout@v2
        with:
          submodules: recursive      

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.8'



      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.1.1

      - name: Build wheels for CPython 3.9
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010
          CIBW_BEFORE_BUILD_MAC: brew install libtiff
          CIBW_BEFORE_BUILD_LINUX: yum -y install libtiff-devel
          MPL_DISABLE_FH4: "yes"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.8
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp38-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010
          CIBW_BEFORE_BUILD_MAC: brew install libtiff
          CIBW_BEFORE_BUILD_LINUX: yum -y install libtiff-devel
          MPL_DISABLE_FH4: "yes"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}



      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl